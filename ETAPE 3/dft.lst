


ARM Macro Assembler    Page 1 


    1 00000000                 thumb
    2 00000000         
    3 00000000                 area             madata, data, readwrite
    4 00000000         
    5 00000000                 export           Mk
    6 00000000         
    7 00000000                 area             moncode, code, readonly
    8 00000000                 import           TabSin
    9 00000000                 import           TabCos
   10 00000000         
   11 00000000 00000040 
                       N       equ              64          ;N = 64
   12 00000000         
   13 00000000         Mk      proc
   14 00000000 E92D 4380       push             {lr,r7-r9}  ;empiler lr
   15 00000004         
   16 00000004 4A13            ldr              r2,=TabCos  ;r2=cos 
   17 00000006         
   18 00000006         
   19 00000006 4681            mov              r9,r0       ;r9=r0 r0 =>l'adres
                                                            se du table signal
   20 00000008 F7FF FFFE       bl               Sigma       ;sauter dans le cal
                                                            cul de la partie r√
                                                            ©el
   21 0000000C         ;r12 resultat partie reel
   22 0000000C         
   23 0000000C FB8C 780C       smull            r7,r8,r12,r12 ;32 bit high =>r8
                                                             ; 32 bit low=>r7 
   24 00000010         
   25 00000010         
   26 00000010 4648            mov              r0,r9       ;r0=r9 r0 =>l'adres
                                                            se du table signal
   27 00000012 4A11            ldr              r2,=TabSin  ;r2=sin
   28 00000014 F7FF FFFE       bl               Sigma       ;sauter dans le cal
                                                            cul de la partie r√
                                                            ©el
   29 00000018         ;r12 resultat partie reel
   30 00000018         
   31 00000018 FBCC 780C       smlal            r7,r8,r12,r12 ;32 bit high +r8=
                                                            >r8 ; 32 bit low+r7
                                                            =>r7
   32 0000001C         
   33 0000001C 4640            mov              r0,r8       ;r0=>r8 32bit*32bit
                                                            =64bit on garde seu
                                                            lement le high pour
                                                             le 32bit
   34 0000001E         
   35 0000001E         
   36 0000001E E8BD 4380       pop              {lr,r7-r9}  ;d√©piler lr
   37 00000022 4770            bx               lr
   38 00000024         
   39 00000024                 endp
   40 00000024         
   41 00000024         Sigma   proc
   42 00000024         
   43 00000024 F04F 0300       mov              r3,#0       ;affecter r3 avec 0
                                                             => i
   44 00000028 F04F 0C00       mov              r12,#0      ;affecter r12 avec 
                                                            0



ARM Macro Assembler    Page 2 


   45 0000002C         Debut
   46 0000002C         ;la boucle commence 
   47 0000002C 2B40            cmp              r3,#N       ;comparaison r3 et 
                                                            N 64 => r3<=N
   48 0000002E D00F            beq              Fin         ;si r3==N sauter da
                                                            ns la fin , on fini
                                                            t le boucle
   49 00000030         
   50 00000030         ;partie sinon
   51 00000030         
   52 00000030 B470            push             {r4-r6}     ;empiler/utiliser r
                                                            4-r6
   53 00000032         
   54 00000032 F930 4013       ldrsh            r4,[r0,r3,lsl #1] ;r4=r0+r3*2^1
                                                             (lsl #1=decalage √
                                                            † gauche =2^#1=10(b
                                                            inaire))
   55 00000036         ;r0 => l'adresse de base du signal
   56 00000036         
   57 00000036 FB03 F501       mul              r5,r3,r1    ;r5=r3*r1 =>k*i
   58 0000003A         ;r1 => la valeur de k
   59 0000003A         
   60 0000003A F005 053F       and              r5,#0x3F    ;(ik)/N=64 =>0x3F
   61 0000003E         
   62 0000003E F932 6015       ldrsh            r6,[r2,r5,lsl #1] ;r6=r2+r5*2^1
                                                             (lsl #1=decalage √
                                                            † gauche =2^#1=10(b
                                                            inaire))
   63 00000042         ;r2 l'adresse de la table (cos ou sin)
   64 00000042         
   65 00000042 FB04 F406       mul              r4,r4,r6    ;x/signal(i)*sin/co
                                                            s(ik2pi/N)
   66 00000046 44A4            add              r12,r12,r4  ;r12=r12+r4 => re(k
                                                            )=re(k-1)+x(i)*sin/
                                                            cos
   67 00000048         
   68 00000048 F103 0301       add              r3,#1       ;r3=r3+1 i++
   69 0000004C         
   70 0000004C BC70            pop              {r4-r6}     ;d√©piler/vider r4-
                                                            r6
   71 0000004E         
   72 0000004E E7ED            b                Debut
   73 00000050         
   74 00000050         Fin
   75 00000050 4660            mov              r0,r12      ;r0=r12
   76 00000052 4770            bx               lr
   77 00000054                 endp
   78 00000054                 end
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\dft.d -o.\obj\dft.o -I.\RTE\_Simu -ID:\Users\machilus\AppDat
a\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -ID:\Users\machilus\AppDat
a\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine="__EVAL S
ETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 529"
 --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --list=dft.lst df
t.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

madata 00000000

Symbol: madata
   Definitions
      At line 3 in file dft.s
   Uses
      None
Comment: madata unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Debut 0000002C

Symbol: Debut
   Definitions
      At line 45 in file dft.s
   Uses
      At line 72 in file dft.s
Comment: Debut used once
Fin 00000050

Symbol: Fin
   Definitions
      At line 74 in file dft.s
   Uses
      At line 48 in file dft.s
Comment: Fin used once
Mk 00000000

Symbol: Mk
   Definitions
      At line 13 in file dft.s
   Uses
      At line 5 in file dft.s
Comment: Mk used once
Sigma 00000024

Symbol: Sigma
   Definitions
      At line 41 in file dft.s
   Uses
      At line 20 in file dft.s
      At line 28 in file dft.s

moncode 00000000

Symbol: moncode
   Definitions
      At line 7 in file dft.s
   Uses
      None
Comment: moncode unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000040

Symbol: N
   Definitions
      At line 11 in file dft.s
   Uses
      At line 47 in file dft.s
Comment: N used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TabCos 00000000

Symbol: TabCos
   Definitions
      At line 9 in file dft.s
   Uses
      At line 16 in file dft.s
Comment: TabCos used once
TabSin 00000000

Symbol: TabSin
   Definitions
      At line 8 in file dft.s
   Uses
      At line 27 in file dft.s
Comment: TabSin used once
2 symbols
346 symbols in table
